specVersion: 1.2.0 # La version compatible avec Alchemy

features:
  - ipfsOnEthereumContracts
  - nonDeterministicIpfs
  # - fullTextSearch permet de faire des recherches dans toute la base de donnée (une sorte de google)... tres utile pour la barre de recherche coté front => il faut ajouté dans schema.graphql une directive  @fulltext sur les champs qu'on veut rendre recherchable
  # - grafting A ajouter pour ne pas tout reindexer pour l'instant pas besoin (voir la partie graft)
  # - nonFatalErrors permet d'empecher le subgraph de crash en cas d'erreur dans une data (elle ignore juste le block en question)... Mais pas du tout recommendé

indexerHints:
  prune: auto

description: Subgraph Makao avec intégration IPFS
repository: https://github.com/mnaji42/subgraph-makao-ipfs

schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum
    name: MakaoFactory
    network: sepolia
    source:
      address: "0xfc58FefaDA53D508FD584278B8EED8e7A02c34B2"
      abi: MakaoFactory
      startBlock: 8553252
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Market
        - GlobalStat
      abis:
        - name: MakaoFactory
          file: ./abis/MakaoFactory.json
        - name: MakaoFixture
          file: ./abis/MakaoFixture.json
      eventHandlers:
        - event: CreateInstance(indexed address)
          handler: handleCreateInstance
      file: ./src/makao-factory.ts

templates:
  # Template pour les contrats de marché
  - kind: ethereum
    name: MakaoFixture
    network: sepolia
    source:
      abi: MakaoFixture
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Market
        - MarketEvent
        - Engagement
        - GlobalStat
      abis:
        - name: MakaoFixture
          file: ./abis/MakaoFixture.json
      eventHandlers:
        - event: EngageChallenge(address,uint256,uint256)
          handler: handleEngageChallenge
        - event: EventCancelled()
          handler: handleEventCancelled
        - event: ExitEvent(indexed address,address,uint256)
          handler: handleExitEvent
        - event: ResolveEvent(uint256[])
          handler: handleResolveEvent
        - event: MarketMetadataSet(string)
          handler: handleMarketMetadataSet
      file: ./src/market.ts

  # Template pour les données IPFS
  - name: MarketMetadata
    kind: file/ipfs
    mapping:
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/ipfs-handler.ts
      handler: handleMarketMetadata
      entities:
        - Market
        - MarketEvent
      abis:
        - name: MakaoFixture
          file: ./abis/MakaoFixture.json
